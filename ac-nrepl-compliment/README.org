* ac-cider-compliment

  ac-cider-compliment is a completion source for Emacs auto-complete
  package that uses [[https://github.com/alexander-yakushev/compliment][Compliment]] as candidates provider.

  ac-cider-compliment started as a fork of [[https://github.com/clojure-emacs/ac-nrepl][ac-nrepl]] which uses
  [[https://github.com/ninjudd/clojure-complete][clojure-complete]] as backend. Then ac-cider-compliment diverged too
  much to remain a fork, so I moved it into a separate project.

** Installation

   ac-cider-compliment is available as a package in [[http://melpa.milkbox.net][Melpa]] repository.
   You can install it from there like:

   : M-x package-install ac-cider-compliment

   ac-cider-compliment depends on =auto-complete= and =cider= which
   will be downloaded automatically.

   =ac-nrepl-compliment= provides an CIDER-specific completion source,
   so =auto-complete= needs to be told to use them when =cider-mode=
   is active. To do this, put the following code in your emacs init
   file to

#+begin_src el
(require 'ac-cider-compliment)
(add-hook 'cider-mode-hook 'ac-flyspell-workaround)
(add-hook 'cider-mode-hook 'ac-cider-compliment-setup)
(add-hook 'cider-repl-mode-hook 'ac-cider-compliment-repl-setup)
(eval-after-load "auto-complete"
  '(add-to-list 'ac-modes cider-mode))
#+end_src

   If you want to trigger =auto-complete= using TAB in CIDER buffers, you may
   want to put =auto-complete= into your =completion-at-point-functions=:

#+begin_src el
(defun set-auto-complete-as-completion-at-point-function ()
  (setq completion-at-point-functions '(auto-complete)))

(add-hook 'auto-complete-mode-hook 'set-auto-complete-as-completion-at-point-function)
(add-hook 'cider-mode-hook 'set-auto-complete-as-completion-at-point-function)
#+end_src

** Usage

   =ac-cider-compliment= should now automatically be enabled when you
   visit a buffer in which =cider-mode= is active and =auto-complete=
   is enabled. (The symbols "cider" and "AC" should appear in the
   modeline.)

   Simply trigger auto-completion, and completion candidates supplied
   by Compliment should be displayed. After a short delay, popup
   documentation for the completed symbol should also be displayed.
